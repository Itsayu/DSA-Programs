class Solution{
    public:
    //Function to store the zig zag order traversal of tree in a list.
    vector <int> zigZagTraversal(Node* root)
    {
    	// Code here
    	vector<int> akt;
    	if(root == NULL){
    	    return akt;
    	}
    	queue<Node*> q;
    	q.push(root);
    	
    // 	flag
        bool leftToRight = true;
    	
    	while(!q.empty()){
    	    int size = q.size();
    	    vector<int> nr(size);
    	    for(int i=0; i<size; i++){
    	        Node* frontNode = q.front();
    	        q.pop();
    	        
    	        int index = leftToRight ? i : size - i - 1;
    	        nr[index] = frontNode -> data;
    	        
    	        if(frontNode -> left){
    	            q.push(frontNode -> left);
    	        }
    	        if(frontNode -> right){
    	            q.push(frontNode -> right);
    	        }
    	    }
    	    leftToRight = !leftToRight;
    	    for(auto i : nr){
    	        akt.push_back(i);
    	    } 
    	}
    	return akt;
    	
    }
};
