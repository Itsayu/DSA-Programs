#include<iostream>
#include<queue>
using namespace std;

class node{
    public:
    int data;
    node* left;
    node* right;
    // Constructor
    node(int d){
        this -> data = d;
        this -> left = NULL;
        this -> right = NULL;
    }
};
node* buildTree(node* root){ 
    cout<<"Enter the data: "<<endl;
    int data;
    cin>>data;
    root = new node(data);
    
    if(data < 0){
        return NULL;
    }
    cout<<"Enter the data for inserting in left of "<<data<<endl;
    root -> left = buildTree(root -> left);
    cout<<"Enter the data for inserting in right of "<<data<<endl;
    root -> right = buildTree(root -> right);
    return root; 
}
void levelOrderTraversal(node* root){
    queue<node*> nr;
    nr.push(root);
    nr.push(NULL);
    while(!nr.empty()){
        node* temp = nr.front();
        nr.pop();
        
        if(temp == NULL){
             cout<<endl;
             if(!nr.empty()){
                 nr.push(NULL);
             }
        }
        else{
            cout<<temp -> data<<" "; 
            if(temp -> left){
                nr.push(temp -> left);
            }
            if(temp -> right){
                nr.push(temp -> right);
            }
        }
    }
}
int main(){
    node* root = NULL;
    // creating a tree
    root = buildTree(root);
    // 1 3 7 -1 -1 11 -1 -1 5 17 -1 -1 -1
    // level order
    cout<<"Printing the level order traversal output: "<<endl;
    levelOrderTraversal(root);
}
